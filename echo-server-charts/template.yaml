---
# Source: echo-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: matraxa-echo-server
  labels:
    helm.sh/chart: echo-server-0.1.0
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: matraxa
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 80
      nodePort: 32000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: matraxa
---
# Source: echo-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: matraxa-echo-server
  labels:
    helm.sh/chart: echo-server-0.1.0
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: matraxa
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 80
      nodePort: 31000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: matraxa
---
# Source: echo-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matraxa-echo-server
  labels:
    helm.sh/chart: echo-server-0.1.0
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: matraxa
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: echo-server
      app.kubernetes.io/instance: matraxa
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echo-server
        app.kubernetes.io/instance: matraxa
    spec:
      securityContext:
        {}
      containers:
        - name: echo-server
          securityContext:
            {}
          image: "matraxa/echo-server:latest"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe: 
            httpGet:
              path: /
              port: http
          readinessProbe: 
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 256Mi
